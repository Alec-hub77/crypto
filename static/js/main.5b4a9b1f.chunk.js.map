{"version":3,"sources":["images/cryptocurrency.png","components/Navbar/Navbar.jsx","services/cryptoAPI.js","components/Cryptocurrencies/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News/News.jsx","components/Home/Home.jsx","components/Exchanges/Exchanges.jsx","components/LineChart/LineChart.jsx","components/CryptoDetails/CryptoDetails.jsx","components/Footer/Footer.jsx","App.jsx","store/store.js","index.js"],"names":["Navbar","useState","activeIcon","setActiveIcon","showMenu","setShowMenu","toggleMenuIcon","className","onClick","src","logo","alt","exact","to","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCoin","coinId","getCoinHistory","timePeriod","useGetCryptosQuery","useGetCoinQuery","useGetCoinHistoryQuery","Cryptocurrencies","simplified","cryptoList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","filteredData","coins","filter","coin","name","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","crypto","uuid","rank","iconUrl","with","height","millify","price","marketCap","change","symbol","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","Option","Select","showSearch","style","width","optionFilterProp","filterOption","input","option","children","indexOf","news","i","href","rel","image","thumbnail","contentUrl","description","substring","provider","moment","datePublished","startOf","fromNow","Home","globalStats","stats","total","totalMarketCap","totalMarkets","totalExchanges","total24hVolume","Exchanges","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","time","timestamp","Date","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","CryptoDetails","useParams","Object","values","setTimePeriod","cryptoDetails","title","icon","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","FundOutlined","numberOfExchanges","MoneyCollectOutlined","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","defaultValue","date","HTMLReactParser","links","link","Footer","App","path","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b4a9b1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import './navbar.scss';\r\nimport logo from '../../images/cryptocurrency.png';\r\nimport {\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n  MoneyCollectOutlined,\r\n  FundOutlined,\r\n  BulbOutlined,\r\n  HomeOutlined\r\n} from '@ant-design/icons/lib/icons';\r\nimport { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const [activeIcon, setActiveIcon] = useState(true);\r\n  const [showMenu, setShowMenu] = useState(true);\r\n  \r\n\r\n  const toggleMenuIcon = () => {\r\n    setActiveIcon(!activeIcon);\r\n    setShowMenu(!showMenu);\r\n  };\r\n\r\n  return (\r\n    <div className={showMenu ? \"navbar\" : \"navbar hidden\"}>\r\n      <div className=\"navbar_container\">\r\n        <div className=\"navbar_menu\">\r\n          {activeIcon ? (\r\n            <MenuFoldOutlined onClick={toggleMenuIcon} />\r\n          ) : (\r\n            <MenuUnfoldOutlined onClick={toggleMenuIcon} />\r\n          )}\r\n        </div>\r\n        <div className=\"navbar_logo\">\r\n          <img src={logo} alt=\"crypto\" />\r\n          <h3>Cryptoverse</h3>\r\n        </div>\r\n        <div className=\"navbar_links\">\r\n          <div className=\"navbar-link\">\r\n            <NavLink exact to=\"/\">\r\n            <HomeOutlined />\r\n              <span className=\"link-name\">Home</span>\r\n            </NavLink>\r\n            <NavLink to=\"/cryptocurrencies\">\r\n              <FundOutlined />\r\n              <span className=\"link-name\">Cryptocurrencies</span>\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"navbar-link\">\r\n            <NavLink to=\"/exchanges\">\r\n              <MoneyCollectOutlined />\r\n              <span className=\"link-name\">Exchanges</span>\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"navbar-link\">\r\n            <NavLink to=\"/news\">\r\n              <BulbOutlined />\r\n              <span className=\"link-name\">News</span>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n  'x-rapidapi-key': '224dd91d2dmsha4835ac57d331a4p101de8jsna91c720f307b',\r\n};\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCoin: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCoinHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history?tymePeriod=${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptosQuery, useGetCoinQuery, useGetCoinHistoryQuery } =\r\n  cryptoApi;\r\n","import './cryptocurrencies.scss'\r\nimport { useState, useEffect } from \"react\"\r\nimport { useGetCryptosQuery } from \"../../services/cryptoAPI\"\r\nimport { Link } from 'react-router-dom'\r\nimport millify from 'millify'\r\nimport {SearchOutlined} from '@ant-design/icons/lib/icons'\r\n\r\n\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100\r\n    const { data: cryptoList, isFetching } = useGetCryptosQuery(count)\r\n    const [cryptos, setCryptos] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    \r\n    useEffect(() => {  \r\n        const filteredData = cryptoList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        setCryptos(filteredData)\r\n    }, [cryptoList, searchTerm])\r\n\r\n    if(isFetching) {\r\n        return 'Loading...'\r\n    }\r\n\r\n    return (\r\n        <>\r\n        { !simplified && (\r\n              <div className=\"search-crypto\">\r\n              <div className=\"search-crypto-container\">\r\n                  <SearchOutlined />\r\n                  <input type=\"text\" placeholder=\"Search cryptocurrency...\" onChange={e => setSearchTerm(e.target.value)}/>\r\n              </div>\r\n          </div>\r\n        )}\r\n      \r\n        <div className=\"cryptocurrencies\">\r\n            <div className=\"crypto_card_container\">\r\n                { cryptos?.map(crypto => (\r\n                <Link to={`/crypto/${crypto.uuid}`} key={crypto.uuid}>\r\n                <div className=\"crypto_card\" >\r\n                <div className=\"crypto_card_title\" >\r\n                    <h4>{crypto.rank}. {crypto.name}</h4>\r\n                    <img src={crypto.iconUrl} alt=\"crypto-logo\" with={30} height={30}/>\r\n                </div>\r\n                <div className=\"break-line\"></div>\r\n                <div className=\"crypto_card_content\">\r\n                    <div className=\"crypto_card_desc\">\r\n                        <span className=\"crypto_card_span\">Price:</span> <span>{millify(crypto.price)}</span>\r\n                    </div>\r\n                    <div className=\"crypto_card_desc\">\r\n                        <span className=\"crypto_card_span\">Market Cap:</span> <span>{millify(crypto.marketCap)}</span>\r\n                    </div>\r\n                    <div className=\"crypto_card_desc\">\r\n                        <span className=\"crypto_card_span\">Daily Change:</span> <span>{millify(crypto.change)}</span>\r\n                    </div>\r\n                    <div className=\"crypto_card_desc\">\r\n                        <span className=\"crypto_card_span\">Symbol:</span> <span>{crypto.symbol}</span>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </Link>\r\n\r\n                ))}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '224dd91d2dmsha4835ac57d331a4p101de8jsna91c720f307b'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoNewsHeaders})\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    })\r\n})\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import './news.scss';\r\nimport { useGetCryptoNewsQuery } from '../../services/cryptoNewsApi';\r\nimport moment from 'moment';\r\nimport { Select } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useGetCryptosQuery } from '../../services/cryptoAPI';\r\n\r\nconst demoImage =\r\n  'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n\r\n  const { data } = useGetCryptosQuery(100);\r\n\r\n  const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  });\r\n\r\n  const { Option } = Select;\r\n\r\n  if(isFetching && !data) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"select_news_container\">\r\n          <Select\r\n            showSearch\r\n            className=\"select_news\"\r\n            style={{width: '240px'}}\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n            {data?.data?.coins.map((coin) =>  (\r\n                <Option key={coin.uuid} value={coin.name}>{coin.name}</Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      )}\r\n      <div className=\"crypto_news\">\r\n        <div className=\"news_card-container\">\r\n          {cryptoNews?.value?.map((news, i) => (\r\n            <div className=\"news_card\" key={i}>\r\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"news_image_container\">\r\n                  <h3 className=\"news_title\">{news.name}</h3>\r\n                  <img\r\n                    src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                    alt=\"news-img\"\r\n                  />\r\n                </div>\r\n                <div className=\"news_description\">\r\n                  <p>\r\n                    {news.description > 100\r\n                      ? news.description.substring(0, 100) + '...'\r\n                      : news.description}\r\n                  </p>\r\n                </div>\r\n                <div className=\"provider_container\">\r\n                  <div className=\"provider_container-title\">\r\n                    <img\r\n                      src={\r\n                        news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                        demoImage\r\n                      }\r\n                      alt=\"news\"\r\n                      width={25}\r\n                      height={25}\r\n                    />\r\n                    <div className=\"provider_name\">\r\n                      {news.provider[0]?.name}\r\n                    </div>\r\n                  </div>\r\n                  <small className=\"date\">\r\n                    {moment(news.datePublished).startOf('ss').fromNow()}\r\n                  </small>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import './home.scss'\r\nimport { useGetCryptosQuery } from '../../services/cryptoAPI';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom'\r\nimport Cryptocurrincies from '../Cryptocurrencies/Cryptocurrencies'\r\nimport News from './../News/News';\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const globalStats = data?.data?.stats;\r\n\r\n\r\n\r\n  if(isFetching) {\r\n    return 'Loading...'\r\n  }\r\n\r\n  return (\r\n    <div className=\"homePage\">\r\n      <h2>Global Crypto Stats</h2>\r\n      <div className=\"heading\">\r\n        <div className=\"heading_block\">\r\n          <small>Total Cryptocurrincies</small>\r\n          <span>{globalStats.total}</span>\r\n        </div>\r\n        <div className=\"heading_block\">\r\n          <small>Total Market Cap</small>\r\n          <span>{millify(globalStats.totalMarketCap)}</span>\r\n        </div>\r\n        <div className=\"heading_block\">\r\n          <small>Total Markets</small>\r\n          <span>{globalStats.totalMarkets}</span>\r\n        </div>\r\n        <div className=\"heading_block\">\r\n          <small>Total Exchanges</small>\r\n          <span>{globalStats.totalExchanges}</span>\r\n        </div>\r\n        <div className=\"heading_block\">\r\n          <small>Total 24h Volume</small>\r\n          <span>{millify(globalStats.total24hVolume)}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"home_heading_container\">\r\n        <div className=\"home_heading-title\">\r\n          <h2>Top 10 Cryptocurrincies in the World</h2>\r\n          <h3><Link to=\"/cryptocurrencies\">Show more</Link></h3>\r\n        </div>\r\n      </div>\r\n      <Cryptocurrincies simplified/>\r\n      <div className=\"home_heading_container\">\r\n        <div className=\"home_heading-title\">\r\n          <h2>Latest Crypto News</h2>\r\n          <h3><Link to=\"/news\">Show more</Link></h3>\r\n        </div>\r\n      </div>\r\n      <News simplified/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const Exchanges = () => {\r\n    return (\r\n        <div>\r\n            Exchanges\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exchanges\r\n","import './lineChart.scss';\r\nimport { Line, Chart } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto';\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n    // coinTimestamp.push(\r\n    //   new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\r\n    // );\r\n  }\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    let time = coinHistory?.data?.history[i].timestamp;\r\n    coinTimestamp.push(\r\n      new Date(time * 1000).toLocaleDateString()\r\n    );\r\n    \r\n  }\r\n\r\n \r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price in USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n//   const options = {\r\n//     scale: {\r\n//       yAxes: [\r\n//         {\r\n//           ticks: {\r\n//             beginAtZero: true,\r\n//           },\r\n//         },\r\n//       ],\r\n//     },\r\n//   };\r\n\r\n  return (\r\n    <div className=\"line-chart\">\r\n      <div className=\"chart_header\">\r\n        <h2>{coinName} price Chart</h2>\r\n        <div className=\"price_container\">\r\n          <h4 className=\"price_change\">{coinHistory?.data?.change}%</h4>\r\n          <h4 className=\"current_price\">\r\n            Current {coinName} price: <span>${currentPrice}</span> \r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import './cryptoDetail.scss';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport { useGetCoinQuery, useGetCoinHistoryQuery } from '../../services/cryptoAPI';\r\nimport millify from 'millify';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { Select } from 'antd';\r\nimport LineChart from '../LineChart/LineChart'\r\n\r\n\r\n\r\nconst CryptoDetails = () => {\r\n  let coinId = useParams();\r\n  coinId = Object.values(coinId)[0];\r\n  const [timePeriod, setTimePeriod] = useState('7d');\r\n  const { data, isFetching } = useGetCoinQuery(coinId);\r\n  const { data: coinHistory } = useGetCoinHistoryQuery({ coinId , timePeriod })\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n\r\n\r\n  const { Option } = Select;\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    {\r\n      title: 'Price to USD',\r\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: '24h Volume',\r\n      value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: 'Market Cap',\r\n      value: `$ ${\r\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\r\n      }`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'All-time-high(daily avg.)',\r\n      value: `$ ${\r\n        cryptoDetails?.allTimeHigh?.price &&\r\n        millify(cryptoDetails?.allTimeHigh?.price)\r\n      }`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: 'Number Of Markets',\r\n      value: cryptoDetails?.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: 'Number Of Exchanges',\r\n      value: cryptoDetails?.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: 'Aprroved Supply',\r\n      value: cryptoDetails?.supply?.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Total Supply',\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Circulating Supply',\r\n      value: `$ ${\r\n        cryptoDetails?.supply?.circulating &&\r\n        millify(cryptoDetails?.supply?.circulating)\r\n      }`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  if (isFetching) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className=\"coin_details_container\">\r\n      <div className=\"coin_heading_container\">\r\n        <h1>\r\n          {cryptoDetails.name} ({cryptoDetails.symbol})\r\n        </h1>\r\n        <span>{cryptoDetails.name} </span>\r\n        <small>\r\n          live price in US Dollar (USD). View value statistics, market cap and\r\n          supply.\r\n        </small>\r\n        <div className=\"break-line\"></div>\r\n        <div className=\"coin_timeperiod\">\r\n          <Select\r\n            defaultValue=\"7d\"\r\n            className=\"select_timeperiod\"\r\n            placeholder=\"Select time period\"\r\n            onChange={(value) => setTimePeriod(value)}\r\n          >\r\n            {time.map((date) => (\r\n              <Option key={date}>{date}</Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <LineChart \r\n      coinHistory={coinHistory} \r\n      currentPrice={millify(cryptoDetails?.price)} \r\n      coinName={cryptoDetails?.name}\r\n      />\r\n      <div className=\"stats_container\">\r\n        <div className=\"stats_coin_value\">\r\n          <div className=\"stats_coin_value-heading\">\r\n            <h2>{cryptoDetails.name} Value Statistics</h2>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}</p>\r\n          </div>\r\n          <div className=\"stats_coin_statistic\">\r\n            {stats.map(({ title, value, icon }) => (\r\n              <div className=\"coint_stats\" key={title}>\r\n                <div className=\"coin_stats_name\">\r\n                  <span>{icon}</span>\r\n                  <span>{title}</span>\r\n                </div>\r\n                <div className=\"stats\">{value}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"stats_coin_value\">\r\n          <div className=\"stats_coin_value-heading\">\r\n            <h2>Other statistics</h2>\r\n            <p>\r\n              An overview showing the statistics of all crypto currencyrencies\r\n            </p>\r\n          </div>\r\n          <div className=\"stats_coin_statistic\">\r\n            {genericStats.map(({ title, value, icon }) => (\r\n              <div className=\"coint_stats\" key={title}>\r\n                <div className=\"coin_stats_name\">\r\n                  <span>{icon}</span>\r\n                  <span>{title}</span>\r\n                </div>\r\n                <div className=\"stats\">{value}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"coin_desc\">\r\n        <div className=\"coin_desc_name\">\r\n          <h1>\r\n            <span>What is</span> {cryptoDetails.name}\r\n          </h1>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </div>\r\n        <div className=\"coin_desc_links\">\r\n          <div className=\"coin_desc_name\">\r\n            <h1>{cryptoDetails.name} Links</h1>\r\n          </div>\r\n          <div className=\"coin_links\">\r\n            {cryptoDetails.links?.map((link, i) => (\r\n              <div className=\"coin_link\" key={i}>\r\n                <h3>{link.type}</h3>\r\n                <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                  {link.name}\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import { Link } from 'react-router-dom'\r\nimport './footer.scss'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <h4>Cryptoverse</h4>\r\n            <h4>All rights reserved</h4>\r\n            <div className=\"footer-links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/exchanges\">Exchanges</Link>\r\n                <Link to=\"/news\">News</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './App.scss';\r\nimport {\r\n  Navbar,\r\n  Home,\r\n  News,\r\n  Cryptocurrencies,\r\n  Exchanges,\r\n  CryptoDetails,\r\n  Footer,\r\n} from './components';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        <div className=\"app\">\r\n          <Navbar />\r\n          <div className=\"routes\">\r\n            <div className=\"main_content\">\r\n              <Switch>\r\n                <Route exact path={'/'}>\r\n                  <Home />\r\n                </Route>\r\n                <Route path={'/cryptocurrencies'}>\r\n                  <Cryptocurrencies />\r\n                </Route>\r\n                <Route path={'/crypto/:coinId'}>\r\n                  <CryptoDetails />\r\n                </Route>\r\n                <Route path={'/exchanges'}>\r\n                  <Exchanges />\r\n                </Route>\r\n                <Route path={'/news'}>\r\n                  <News />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n            <footer className=\"footer_content\">\r\n              <Footer />\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { cryptoApi } from '../services/cryptoAPI'\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    }\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}